{"remainingRequest":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue","mtime":1604066408881},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVHJlbmRDaGFydCBmcm9tICJ2dWUtdHJlbmQtY2hhcnQiOwpWdWUudXNlKFRyZW5kQ2hhcnQpOwppbXBvcnQgbW9tZW50IGZyb20gIm1vbWVudCI7CmV4cG9ydCBkZWZhdWx0IHsKICBlbDogIiNhcHAiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc1Nob3duOiA0LAogICAgICBkYXRhc2V0OiBbXSwKICAgICAgbGFiZWxzOiB7CiAgICAgICAgeExhYmVsczogW10sCiAgICAgICAgeUxhYmVsczogNSwKICAgICAgICB5TGFiZWxzVGV4dEZvcm1hdHRlcjogZnVuY3Rpb24geUxhYmVsc1RleHRGb3JtYXR0ZXIodmFsKSB7CiAgICAgICAgICByZXR1cm4gIiQiICsgTWF0aC5yb3VuZCh2YWwgKiAxMDApIC8gMTAwOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZ3JpZDogewogICAgICAgIHZlcnRpY2FsTGluZXM6IHRydWUsCiAgICAgICAgdmVydGljYWxMaW5lc051bWJlcjogMTAsCiAgICAgICAgaG9yaXpvbnRhbExpbmVzOiB0cnVlLAogICAgICAgIGhvcml6b250YWxMaW5lc051bWJlcjogNQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RGF0ZTogZnVuY3Rpb24gZ2V0RGF0ZShkYXlzLCBtb250aHMsIHllYXJzLCBmb3JtYXQpIHsKICAgICAgcmV0dXJuIG1vbWVudCgpLnN1YnRyYWN0KGRheXMsICJkYXlzIikuc3VidHJhY3QobW9udGhzLCAibW9udGhzIikuc3VidHJhY3QoeWVhcnMsICJ5ZWFycyIpLmZvcm1hdChmb3JtYXQpOwogICAgfSwKICAgIGdldExhc3RXZWVrc0RhdGE6IGZ1bmN0aW9uIGdldExhc3RXZWVrc0RhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY29weVdlZWtEYXRhc2V0ID0gW107CiAgICAgIGF4aW9zLmdldCgiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24/c3RhcnQ9IiArIHRoaXMuZ2V0RGF0ZSg3LCAwLCAwLCAiWVlZWS1NTS1ERCIpICsgIiZlbmQ9IiArIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiWVlZWS1NTS1ERCIpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZGF0YSA9IHJlcy5kYXRhLmJwaTsKCiAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHsKICAgICAgICAgIGNvcHlXZWVrRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICBfdGhpcy5kYXRhc2V0ID0gY29weVdlZWtEYXRhc2V0OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMubGFiZWxzLnhMYWJlbHMgPSBbdGhpcy5nZXREYXRlKDcsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoNiwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSg1LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDQsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMywgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgyLCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDEsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMCwgMCwgMCwgIkREL01NIildOwogICAgfSwKICAgIGdldExhc3RNb250aHNEYXRhOiBmdW5jdGlvbiBnZXRMYXN0TW9udGhzRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgY29weU1vbnRoRGF0YXNldCA9IFtdOwogICAgICBheGlvcy5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YS5icGk7CgogICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICAgICAgICBjb3B5TW9udGhEYXRhc2V0LnB1c2goZGF0YVtrZXldKTsKICAgICAgICAgIF90aGlzMi5kYXRhc2V0ID0gY29weU1vbnRoRGF0YXNldDsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmxhYmVscy54TGFiZWxzID0gW3RoaXMuZ2V0RGF0ZSgzMCwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgyNSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgyMCwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgxNSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgxMCwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSg1LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJERC9NTSIpXTsKICAgIH0sCiAgICBnZXRMYXN0WWVhcnNEYXRhOiBmdW5jdGlvbiBnZXRMYXN0WWVhcnNEYXRhKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBjb3B5WWVhckRhdGFzZXQgPSBbXTsKICAgICAgdGhpcy55ZWFyRGF0YXNldCA9IFtdOwogICAgICBheGlvcy5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMSwgIllZWVktTU0tREQiKSArICImZW5kPSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMCwgIllZWVktTU0tREQiKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YS5icGk7CgogICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICAgICAgICBjb3B5WWVhckRhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgX3RoaXMzLmRhdGFzZXQgPSBjb3B5WWVhckRhdGFzZXQ7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5sYWJlbHMueExhYmVscyA9IFt0aGlzLmdldERhdGUoMCwgMCwgMSwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDExLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMTAsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCA5LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgOCwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDcsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCA2LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgNSwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDQsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAzLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMiwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDEsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiTU0vWVlZWSIpXTsKICAgIH0sCiAgICBnZXRMYXN0VGVuWWVhcnNEYXRhOiBmdW5jdGlvbiBnZXRMYXN0VGVuWWVhcnNEYXRhKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciBjb3B5VGVuWWVhckRhdGFzZXQgPSBbXTsKICAgICAgdGhpcy50ZW5ZZWFyRGF0YXNldCA9IFtdOwogICAgICBheGlvcy5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMTAsICJZWVlZLU1NLUREIikgKyAiJmVuZD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJZWVlZLU1NLUREIikpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBkYXRhID0gcmVzLmRhdGEuYnBpOwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgY29weVRlblllYXJEYXRhc2V0LnB1c2goZGF0YVtrZXldKTsKICAgICAgICAgIF90aGlzNC5kYXRhc2V0ID0gY29weVRlblllYXJEYXRhc2V0OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMubGFiZWxzLnhMYWJlbHMgPSBbdGhpcy5nZXREYXRlKDAsIDAsIDEwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgOSwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDgsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCA3LCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgNiwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDUsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCA0LCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgMywgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDIsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCAxLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgMCwgIk1NL1lZWVkiKV07CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRMYXN0VGVuWWVhcnNEYXRhKCk7CiAgfQp9Ow=="},{"version":3,"sources":["BitcoinHistory.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"history\">\r\n        <div id=\"historyGraphs\">\r\n            <trend-chart  v-if=\"dataset.length\" :datasets=\"[{data: dataset, fill: true, className: 'curve-btc'}]\" :labels=\"labels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"/>\r\n        </div>\r\n        <div class = \"historyButtons\">\r\n            <button v-on:click=\"changeShown(1), getLastWeeksData()\">1 week</button>\r\n            <button v-on:click=\"changeShown(2), getLastMonthsData()\">1 month</button>\r\n            <button v-on:click=\"changeShown(3), getLastYearsData()\">1 year</button>\r\n            <button v-on:click=\"changeShown(4), getLastTenYearsData()\">10 years</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n    import Vue from \"vue\";\r\n    import TrendChart from \"vue-trend-chart\";\r\n    Vue.use(TrendChart);\r\n    import moment from \"moment\";\r\n    export default{\r\n        el: \"#app\",\r\n        data ()  {\r\n            return {\r\n                isShown: 4,\r\n                dataset: [],\r\n                labels: {\r\n                    xLabels: [],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                grid: {\r\n                    verticalLines: true,\r\n                    verticalLinesNumber: 10,\r\n                    horizontalLines: true,\r\n                    horizontalLinesNumber: 5\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            getDate(days, months, years, format){\r\n                return moment()\r\n                        .subtract(days, \"days\")\r\n                        .subtract(months, \"months\")\r\n                        .subtract(years, \"years\")\r\n                        .format(format)\r\n            },\r\n            getLastWeeksData(){\r\n                var copyWeekDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(7, 0, 0, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyWeekDataset.push(data[key]);\r\n                            this.dataset = copyWeekDataset;\r\n                        }\r\n                    });\r\n\r\n                this.labels.xLabels = [this.getDate(7, 0, 0, \"DD/MM\"), this.getDate(6, 0, 0, \"DD/MM\"), this.getDate(5, 0, 0, \"DD/MM\"),\r\n                                       this.getDate(4, 0, 0, \"DD/MM\"), this.getDate(3, 0, 0, \"DD/MM\"), this.getDate(2, 0, 0, \"DD/MM\"),\r\n                                       this.getDate(1, 0, 0, \"DD/MM\"), this.getDate(0, 0, 0, \"DD/MM\")];\r\n            },\r\n            getLastMonthsData(){\r\n                var copyMonthDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyMonthDataset.push(data[key]);\r\n                            this.dataset = copyMonthDataset;\r\n                        }\r\n                    });\r\n\r\n                this.labels.xLabels = [this.getDate(30, 0, 0, \"DD/MM\"), this.getDate(25, 0, 0, \"DD/MM\"), this.getDate(20, 0, 0, \"DD/MM\"),\r\n                                       this.getDate(15, 0, 0, \"DD/MM\"), this.getDate(10, 0, 0, \"DD/MM\"), this.getDate(5,  0, 0, \"DD/MM\"),\r\n                                       this.getDate(0,  0, 0, \"DD/MM\")];\r\n            },\r\n            getLastYearsData(){\r\n                var copyYearDataset = [];\r\n                this.yearDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 1, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyYearDataset.push(data[key]);\r\n                            this.dataset = copyYearDataset;\r\n                        }\r\n                    });\r\n\r\n                this.labels.xLabels = [this.getDate(0, 0, 1, \"MM/YYYY\"), this.getDate(0, 11, 0, \"MM/YYYY\"), this.getDate(0, 10, 0, \"MM/YYYY\"), \r\n                                       this.getDate(0, 9, 0, \"MM/YYYY\"), this.getDate(0, 8,  0, \"MM/YYYY\"), this.getDate(0, 7,  0, \"MM/YYYY\"),\r\n                                       this.getDate(0, 6, 0, \"MM/YYYY\"), this.getDate(0, 5,  0, \"MM/YYYY\"), this.getDate(0, 4,  0, \"MM/YYYY\"),\r\n                                       this.getDate(0, 3, 0, \"MM/YYYY\"), this.getDate(0, 2,  0, \"MM/YYYY\"), this.getDate(0, 1,  0, \"MM/YYYY\"), \r\n                                       this.getDate(0, 0, 0, \"MM/YYYY\")];\r\n            },\r\n            getLastTenYearsData(){\r\n                var copyTenYearDataset = [];\r\n                this.tenYearDataset = [];\r\n                \r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 10, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyTenYearDataset.push(data[key]);\r\n                            this.dataset = copyTenYearDataset;\r\n                        }\r\n                    });\r\n\r\n                this.labels.xLabels = [this.getDate(0, 0, 10, \"MM/YYYY\"),this.getDate(0, 0, 9, \"MM/YYYY\"),this.getDate(0, 0, 8, \"MM/YYYY\"),this.getDate(0, 0, 7, \"MM/YYYY\"),\r\n                                       this.getDate(0, 0,  6, \"MM/YYYY\"),this.getDate(0, 0, 5, \"MM/YYYY\"),this.getDate(0, 0, 4, \"MM/YYYY\"),this.getDate(0, 0, 3, \"MM/YYYY\"),\r\n                                       this.getDate(0, 0,  2, \"MM/YYYY\"),this.getDate(0, 0, 1, \"MM/YYYY\"),this.getDate(0, 0, 0, \"MM/YYYY\")];\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getLastTenYearsData();\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components"}]}