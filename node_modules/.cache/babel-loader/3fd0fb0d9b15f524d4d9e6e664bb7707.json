{"remainingRequest":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue","mtime":1604064848625},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVHJlbmRDaGFydCBmcm9tICJ2dWUtdHJlbmQtY2hhcnQiOwpWdWUudXNlKFRyZW5kQ2hhcnQpOwppbXBvcnQgbW9tZW50IGZyb20gIm1vbWVudCI7CmV4cG9ydCBkZWZhdWx0IHsKICBlbDogIiNhcHAiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc1Nob3duOiA0LAogICAgICB3ZWVrRGF0YXNldDogW10sCiAgICAgIG1vbnRoRGF0YXNldDogW10sCiAgICAgIHllYXJEYXRhc2V0OiBbXSwKICAgICAgdGVuWWVhckRhdGFzZXQ6IFtdLAogICAgICB3ZWVrTGFiZWxzOiB7CiAgICAgICAgeExhYmVsczogW3RoaXMuZ2V0RGF0ZSg3LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDYsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoNSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSg0LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDMsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMiwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgxLCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJERC9NTSIpXSwKICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgIHlMYWJlbHNUZXh0Rm9ybWF0dGVyOiBmdW5jdGlvbiB5TGFiZWxzVGV4dEZvcm1hdHRlcih2YWwpIHsKICAgICAgICAgIHJldHVybiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDA7CiAgICAgICAgfQogICAgICB9LAogICAgICBtb250aExhYmVsczogewogICAgICAgIHhMYWJlbHM6IFt0aGlzLmdldERhdGUoMzAsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMjUsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMjAsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMTUsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMTAsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoNSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiREQvTU0iKV0sCiAgICAgICAgeUxhYmVsczogNSwKICAgICAgICB5TGFiZWxzVGV4dEZvcm1hdHRlcjogZnVuY3Rpb24geUxhYmVsc1RleHRGb3JtYXR0ZXIodmFsKSB7CiAgICAgICAgICByZXR1cm4gIiQiICsgTWF0aC5yb3VuZCh2YWwgKiAxMDApIC8gMTAwOwogICAgICAgIH0KICAgICAgfSwKICAgICAgeWVhckxhYmVsczogewogICAgICAgIHhMYWJlbHM6IFt0aGlzLmdldERhdGUoMCwgMCwgMSwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDExLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMTAsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCA5LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgOCwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDcsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCA2LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgNSwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDQsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAzLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMiwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDEsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiTU0vWVlZWSIpXSwKICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgIHlMYWJlbHNUZXh0Rm9ybWF0dGVyOiBmdW5jdGlvbiB5TGFiZWxzVGV4dEZvcm1hdHRlcih2YWwpIHsKICAgICAgICAgIHJldHVybiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDA7CiAgICAgICAgfQogICAgICB9LAogICAgICB0ZW5ZZWFyTGFiZWxzOiB7CiAgICAgICAgeExhYmVsczogW3RoaXMuZ2V0RGF0ZSgwLCAwLCAxMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDksICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCA4LCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgNywgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDYsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCA1LCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgNCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDMsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCAyLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgMSwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJNTS9ZWVlZIildLAogICAgICAgIHlMYWJlbHM6IDUsCiAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IGZ1bmN0aW9uIHlMYWJlbHNUZXh0Rm9ybWF0dGVyKHZhbCkgewogICAgICAgICAgcmV0dXJuICIkIiArIE1hdGgucm91bmQodmFsICogMTAwKSAvIDEwMDsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGdyaWQ6IHsKICAgICAgICB2ZXJ0aWNhbExpbmVzOiB0cnVlLAogICAgICAgIHZlcnRpY2FsTGluZXNOdW1iZXI6IDEwLAogICAgICAgIGhvcml6b250YWxMaW5lczogdHJ1ZSwKICAgICAgICBob3Jpem9udGFsTGluZXNOdW1iZXI6IDUKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZVNob3duOiBmdW5jdGlvbiBjaGFuZ2VTaG93bihudW1iZXIpIHsKICAgICAgdGhpcy5pc1Nob3duID0gbnVtYmVyOwogICAgfSwKICAgIGdldERhdGU6IGZ1bmN0aW9uIGdldERhdGUoZGF5cywgbW9udGhzLCB5ZWFycywgZm9ybWF0KSB7CiAgICAgIHJldHVybiBtb21lbnQoKS5zdWJ0cmFjdChkYXlzLCAiZGF5cyIpLnN1YnRyYWN0KG1vbnRocywgIm1vbnRocyIpLnN1YnRyYWN0KHllYXJzLCAieWVhcnMiKS5mb3JtYXQoZm9ybWF0KTsKICAgIH0sCiAgICBnZXRMYXN0V2Vla3NEYXRhOiBmdW5jdGlvbiBnZXRMYXN0V2Vla3NEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGNvcHlXZWVrRGF0YXNldCA9IFtdOwogICAgICBheGlvcy5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoNywgMCwgMCwgIllZWVktTU0tREQiKSArICImZW5kPSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMCwgIllZWVktTU0tREQiKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YS5icGk7CgogICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICAgICAgICBjb3B5V2Vla0RhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgX3RoaXMud2Vla0RhdGFzZXQgPSBjb3B5V2Vla0RhdGFzZXQ7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRMYXN0TW9udGhzRGF0YTogZnVuY3Rpb24gZ2V0TGFzdE1vbnRoc0RhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGNvcHlNb250aERhdGFzZXQgPSBbXTsKICAgICAgYXhpb3MuZ2V0KCJodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbiIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBkYXRhID0gcmVzLmRhdGEuYnBpOwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgY29weU1vbnRoRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICBfdGhpczIubW9udGhEYXRhc2V0ID0gY29weU1vbnRoRGF0YXNldDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGdldExhc3RZZWFyc0RhdGE6IGZ1bmN0aW9uIGdldExhc3RZZWFyc0RhdGEoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGNvcHlZZWFyRGF0YXNldCA9IFtdOwogICAgICB0aGlzLnllYXJEYXRhc2V0ID0gW107CiAgICAgIGF4aW9zLmdldCgiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24/c3RhcnQ9IiArIHRoaXMuZ2V0RGF0ZSgwLCAwLCAxLCAiWVlZWS1NTS1ERCIpICsgIiZlbmQ9IiArIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiWVlZWS1NTS1ERCIpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZGF0YSA9IHJlcy5kYXRhLmJwaTsKCiAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHsKICAgICAgICAgIGNvcHlZZWFyRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICBfdGhpczMueWVhckRhdGFzZXQgPSBjb3B5WWVhckRhdGFzZXQ7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRMYXN0VGVuWWVhcnNEYXRhOiBmdW5jdGlvbiBnZXRMYXN0VGVuWWVhcnNEYXRhKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciBjb3B5VGVuWWVhckRhdGFzZXQgPSBbXTsKICAgICAgdGhpcy50ZW5ZZWFyRGF0YXNldCA9IFtdOwogICAgICBheGlvcy5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMTAsICJZWVlZLU1NLUREIikgKyAiJmVuZD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJZWVlZLU1NLUREIikpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBkYXRhID0gcmVzLmRhdGEuYnBpOwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgY29weVRlblllYXJEYXRhc2V0LnB1c2goZGF0YVtrZXldKTsKICAgICAgICAgIF90aGlzNC50ZW5ZZWFyRGF0YXNldCA9IGNvcHlUZW5ZZWFyRGF0YXNldDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0TGFzdFdlZWtzRGF0YSgpOwogICAgdGhpcy5nZXRMYXN0TW9udGhzRGF0YSgpOwogICAgdGhpcy5nZXRMYXN0WWVhcnNEYXRhKCk7CiAgICB0aGlzLmdldExhc3RUZW5ZZWFyc0RhdGEoKTsKICB9Cn07"},{"version":3,"sources":["BitcoinHistory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,UAAA,MAAA,iBAAA;AACA,GAAA,CAAA,GAAA,CAAA,UAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,EAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,cAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,CAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CADA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAFA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAFA,CADA;AAIA,QAAA,OAAA,EAAA,CAJA;AAKA,QAAA,oBAAA,EAAA,8BAAA,GAAA;AAAA,iBAAA,MAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,IAAA,GAAA;AAAA;AALA,OANA;AAaA,MAAA,WAAA,EAAA;AACA,QAAA,OAAA,EAAA,CAAA,KAAA,OAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EACA,KAAA,OAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CADA,EACA,KAAA,OAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CADA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,CAFA,CADA;AAIA,QAAA,OAAA,EAAA,CAJA;AAKA,QAAA,oBAAA,EAAA,8BAAA,GAAA;AAAA,iBAAA,MAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,IAAA,GAAA;AAAA;AALA,OAbA;AAoBA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,CAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAFA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAFA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAFA,EAGA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAHA,EAGA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAHA,EAGA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAHA,EAGA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAHA,CADA;AAKA,QAAA,OAAA,EAAA,CALA;AAMA,QAAA,oBAAA,EAAA,8BAAA,GAAA;AAAA,iBAAA,MAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,IAAA,GAAA;AAAA;AANA,OApBA;AA4BA,MAAA,aAAA,EAAA;AACA,QAAA,OAAA,EAAA,CAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,SAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EACA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CADA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAFA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAFA,EAEA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAFA,CADA;AAIA,QAAA,OAAA,EAAA,CAJA;AAKA,QAAA,oBAAA,EAAA,8BAAA,GAAA;AAAA,iBAAA,MAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,IAAA,GAAA;AAAA;AALA,OA5BA;AAmCA,MAAA,IAAA,EAAA;AACA,QAAA,aAAA,EAAA,IADA;AAEA,QAAA,mBAAA,EAAA,EAFA;AAGA,QAAA,eAAA,EAAA,IAHA;AAIA,QAAA,qBAAA,EAAA;AAJA;AAnCA,KAAA;AA0CA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,MADA,EACA;AACA,WAAA,OAAA,GAAA,MAAA;AACA,KAHA;AAIA,IAAA,OAJA,mBAIA,IAJA,EAIA,MAJA,EAIA,KAJA,EAIA,MAJA,EAIA;AACA,aAAA,MAAA,GACA,QADA,CACA,IADA,EACA,MADA,EAEA,QAFA,CAEA,MAFA,EAEA,QAFA,EAGA,QAHA,CAGA,KAHA,EAGA,OAHA,EAIA,MAJA,CAIA,MAJA,CAAA;AAKA,KAVA;AAWA,IAAA,gBAXA,8BAWA;AAAA;;AACA,UAAA,eAAA,GAAA,EAAA;AAEA,MAAA,KAAA,CACA,GADA,CACA,iEAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,OAAA,GAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,CADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA;;AACA,aAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,eAAA;AACA;AACA,OARA;AASA,KAvBA;AAwBA,IAAA,iBAxBA,+BAwBA;AAAA;;AACA,UAAA,gBAAA,GAAA,EAAA;AAEA,MAAA,KAAA,CACA,GADA,CACA,uDADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA;;AACA,aAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,gBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,gBAAA;AACA;AACA,OARA;AASA,KApCA;AAqCA,IAAA,gBArCA,8BAqCA;AAAA;;AACA,UAAA,eAAA,GAAA,EAAA;AACA,WAAA,WAAA,GAAA,EAAA;AAEA,MAAA,KAAA,CACA,GADA,CACA,iEAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,OAAA,GAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,CADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA;;AACA,aAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,UAAA,MAAA,CAAA,WAAA,GAAA,eAAA;AACA;AACA,OARA;AASA,KAlDA;AAmDA,IAAA,mBAnDA,iCAmDA;AAAA;;AACA,UAAA,kBAAA,GAAA,EAAA;AACA,WAAA,cAAA,GAAA,EAAA;AAEA,MAAA,KAAA,CACA,GADA,CACA,iEAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,YAAA,CAAA,GAAA,OAAA,GAAA,KAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,CADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA;;AACA,aAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,kBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,UAAA,MAAA,CAAA,cAAA,GAAA,kBAAA;AACA;AACA,OARA;AASA;AAhEA,GA9CA;AAiHA,EAAA,OAjHA,qBAiHA;AACA,SAAA,gBAAA;AACA,SAAA,iBAAA;AACA,SAAA,gBAAA;AACA,SAAA,mBAAA;AACA;AAtHA,CAAA","sourcesContent":["<template>\r\n    <div id=\"history\">\r\n        <div id=\"historyGraphs\">\r\n            <trend-chart  v-if=\"weekDataset.length && isShown == 1\" :datasets=\"[{data: weekDataset, fill: true, className: 'curve-btc'}]\" :labels=\"weekLabels\" :min=\"11000.00\" :grid=\"grid\" :interactive=\"true\"/>\r\n            <trend-chart  v-if=\"monthDataset.length && isShown == 2\" :datasets=\"[{data: monthDataset, fill: true, className: 'curve-btc'}]\" :labels=\"monthLabels\" :min=\"7000.00\" :grid=\"grid\" :interactive=\"true\"/>\r\n            <trend-chart  v-if=\"yearDataset.length && isShown == 3\" :datasets=\"[{data: yearDataset, fill: true, className: 'curve-btc'}]\" :labels=\"yearLabels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"/>\r\n            <trend-chart  v-if=\"tenYearDataset.length && isShown == 4\" :datasets=\"[{data: tenYearDataset, fill: true, className: 'curve-btc'}]\" :labels=\"tenYearLabels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"/>\r\n        </div>\r\n        <div class = \"historyButtons\">\r\n            <button v-on:click=\"changeShown(1), getLastWeeksData()\">1 week</button>\r\n            <button v-on:click=\"changeShown(2), getLastMonthsData()\">1 month</button>\r\n            <button v-on:click=\"changeShown(3), getLastYearsData()\">1 year</button>\r\n            <button v-on:click=\"changeShown(4), getLastTenYearsData()\">10 years</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n    import Vue from \"vue\";\r\n    import TrendChart from \"vue-trend-chart\";\r\n    Vue.use(TrendChart);\r\n    import moment from \"moment\";\r\n    export default{\r\n        el: \"#app\",\r\n        data ()  {\r\n            return {\r\n                isShown: 4,\r\n                weekDataset: [],\r\n                monthDataset: [],\r\n                yearDataset: [],\r\n                tenYearDataset: [],\r\n                weekLabels: {\r\n                    xLabels: [this.getDate(7, 0, 0, \"DD/MM\"), this.getDate(6, 0, 0, \"DD/MM\"), this.getDate(5, 0, 0, \"DD/MM\"),\r\n                              this.getDate(4, 0, 0, \"DD/MM\"), this.getDate(3, 0, 0, \"DD/MM\"), this.getDate(2, 0, 0, \"DD/MM\"),\r\n                              this.getDate(1, 0, 0, \"DD/MM\"), this.getDate(0, 0, 0, \"DD/MM\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                monthLabels: {\r\n                    xLabels: [this.getDate(30, 0, 0, \"DD/MM\"), this.getDate(25, 0, 0, \"DD/MM\"), this.getDate(20, 0, 0, \"DD/MM\"),\r\n                              this.getDate(15, 0, 0, \"DD/MM\"), this.getDate(10, 0, 0, \"DD/MM\"), this.getDate(5, 0, 0, \"DD/MM\"),\r\n                              this.getDate(0, 0, 0, \"DD/MM\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                yearLabels: {\r\n                    xLabels: [this.getDate(0, 0, 1, \"MM/YYYY\"), this.getDate(0, 11, 0, \"MM/YYYY\"), this.getDate(0, 10, 0, \"MM/YYYY\"), \r\n                              this.getDate(0, 9, 0, \"MM/YYYY\"), this.getDate(0, 8, 0, \"MM/YYYY\"), this.getDate(0, 7, 0, \"MM/YYYY\"),\r\n                              this.getDate(0, 6, 0, \"MM/YYYY\"), this.getDate(0, 5, 0, \"MM/YYYY\"), this.getDate(0, 4, 0, \"MM/YYYY\"),\r\n                              this.getDate(0, 3, 0, \"MM/YYYY\"), this.getDate(0, 2, 0, \"MM/YYYY\"), this.getDate(0, 1, 0, \"MM/YYYY\"), this.getDate(0, 0, 0, \"MM/YYYY\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                tenYearLabels: {\r\n                    xLabels: [this.getDate(0,0,10,\"MM/YYYY\"),this.getDate(0,0,9,\"MM/YYYY\"),this.getDate(0,0,8,\"MM/YYYY\"),this.getDate(0,0,7,\"MM/YYYY\"),\r\n                              this.getDate(0,0,6,\"MM/YYYY\"),this.getDate(0,0,5,\"MM/YYYY\"),this.getDate(0,0,4,\"MM/YYYY\"),this.getDate(0,0,3,\"MM/YYYY\"),\r\n                              this.getDate(0,0,2,\"MM/YYYY\"),this.getDate(0,0,1,\"MM/YYYY\"),this.getDate(0,0,0,\"MM/YYYY\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                grid: {\r\n                    verticalLines: true,\r\n                    verticalLinesNumber: 10,\r\n                    horizontalLines: true,\r\n                    horizontalLinesNumber: 5\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            changeShown(number){\r\n                this.isShown = number;\r\n            },\r\n            getDate(days, months, years, format){\r\n                return moment()\r\n                        .subtract(days, \"days\")\r\n                        .subtract(months, \"months\")\r\n                        .subtract(years, \"years\")\r\n                        .format(format)\r\n            },\r\n            getLastWeeksData(){\r\n                var copyWeekDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(7, 0, 0, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyWeekDataset.push(data[key]);\r\n                            this.weekDataset = copyWeekDataset;\r\n                        }\r\n                    });\r\n            },\r\n            getLastMonthsData(){\r\n                var copyMonthDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyMonthDataset.push(data[key]);\r\n                            this.monthDataset = copyMonthDataset;\r\n                        }\r\n                    });\r\n            },\r\n            getLastYearsData(){\r\n                var copyYearDataset = [];\r\n                this.yearDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 1, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyYearDataset.push(data[key]);\r\n                            this.yearDataset = copyYearDataset;\r\n                        }\r\n                    });\r\n            },\r\n            getLastTenYearsData(){\r\n                var copyTenYearDataset = [];\r\n                this.tenYearDataset = [];\r\n                \r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 10, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyTenYearDataset.push(data[key]);\r\n                            this.tenYearDataset = copyTenYearDataset;\r\n                        }\r\n                    });\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n            this.getLastWeeksData();\r\n            this.getLastMonthsData();\r\n            this.getLastYearsData();\r\n            this.getLastTenYearsData();\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components"}]}