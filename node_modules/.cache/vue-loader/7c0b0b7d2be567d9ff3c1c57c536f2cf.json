{"remainingRequest":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue","mtime":1604315923972},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFRyZW5kQ2hhcnQgZnJvbSAidnVlLXRyZW5kLWNoYXJ0IjsKVnVlLnVzZShUcmVuZENoYXJ0KTsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwpleHBvcnQgZGVmYXVsdHsKICAgIGVsOiAiI2FwcCIsCiAgICBkYXRhICgpICB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaXNTaG93bjogNCwKICAgICAgICAgICAgZGF0YXNldDogW10sCiAgICAgICAgICAgIGFsbExhYmVsczogW10sIAogICAgICAgICAgICBjdXJyZW50SW5mbzogewogICAgICAgICAgICAgICAgdmFsdWU6ICIwMDAiLAogICAgICAgICAgICAgICAgbGFiZWw6ICJ4eHgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICAgICAgeExhYmVsczogW10sCiAgICAgICAgICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgICAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgICAgdmVydGljYWxMaW5lczogdHJ1ZSwKICAgICAgICAgICAgICAgIHZlcnRpY2FsTGluZXNOdW1iZXI6IDEwLAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbExpbmVzOiB0cnVlLAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbExpbmVzTnVtYmVyOiA1CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldERhdGUoZGF5czogbnVtYmVyLCBtb250aHM6IG51bWJlciwgeWVhcnM6IG51bWJlciwgZm9ybWF0OiBzdHJpbmcpewogICAgICAgICAgICByZXR1cm4gbW9tZW50KCkKICAgICAgICAgICAgICAgIC5zdWJ0cmFjdChkYXlzLCAiZGF5cyIpCiAgICAgICAgICAgICAgICAuc3VidHJhY3QobW9udGhzLCAibW9udGhzIikKICAgICAgICAgICAgICAgIC5zdWJ0cmFjdCh5ZWFycywgInllYXJzIikKICAgICAgICAgICAgICAgIC5mb3JtYXQoZm9ybWF0KQogICAgICAgIH0sCiAgICAgICAgZ2V0TGFzdFdlZWtzRGF0YSgpewogICAgICAgICAgICB2YXIgY29weVdlZWtEYXRhc2V0ID0gW107CiAgICAgICAgICAgIHRoaXMuYWxsTGFiZWxzID0gW107CiAgICAgICAgICAgIHRoaXMuZ3JpZC52ZXJ0aWNhbExpbmVzTnVtYmVyID0gODsKICAgICAgICAgICAgdGhpcy5sYWJlbHMueExhYmVscyA9IFt0aGlzLmdldERhdGUoNywgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSg2LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDUsIDAsIDAsICJERC9NTSIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0ZSg0LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDMsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMiwgMCwgMCwgIkREL01NIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREYXRlKDEsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMCwgMCwgMCwgIkREL01NIildOwoKICAgICAgICAgICAgYXhpb3MKICAgICAgICAgICAgICAgIC5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoOCwgMCwgMCwgIllZWVktTU0tREQiKSArICImZW5kPSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMCwgIllZWVktTU0tREQiKSkKICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLmJwaTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICBjb3B5V2Vla0RhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGFzZXQgPSBjb3B5V2Vla0RhdGFzZXQ7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsTGFiZWxzLnB1c2gobW9tZW50KGtleSkuZm9ybWF0KCJERC9NTSIpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGdldExhc3RNb250aHNEYXRhKCl7CiAgICAgICAgICAgIHZhciBjb3B5TW9udGhEYXRhc2V0ID0gW107CiAgICAgICAgICAgIHRoaXMuYWxsTGFiZWxzID0gW107CiAgICAgICAgICAgIHRoaXMuZ3JpZC52ZXJ0aWNhbExpbmVzTnVtYmVyID0gNzsKICAgICAgICAgICAgdGhpcy5sYWJlbHMueExhYmVscyA9IFt0aGlzLmdldERhdGUoMzAsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMjUsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMjAsIDAsIDAsICJERC9NTSIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0ZSgxNSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgxMCwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSg1LCAgMCwgMCwgIkREL01NIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREYXRlKDAsICAwLCAwLCAiREQvTU0iKV07CgogICAgICAgICAgICBheGlvcwogICAgICAgICAgICAgICAgLmdldCgiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24iKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvcHlNb250aERhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGFzZXQgPSBjb3B5TW9udGhEYXRhc2V0OwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbExhYmVscy5wdXNoKG1vbWVudChrZXkpLmZvcm1hdCgiREQvTU0iKSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBnZXRMYXN0WWVhcnNEYXRhKCl7CiAgICAgICAgICAgIHZhciBjb3B5WWVhckRhdGFzZXQgPSBbXTsKICAgICAgICAgICAgdGhpcy5hbGxMYWJlbHMgPSBbXTsKICAgICAgICAgICAgdGhpcy5ncmlkLnZlcnRpY2FsTGluZXNOdW1iZXIgPSAxMzsKICAgICAgICAgICAgdGhpcy5sYWJlbHMueExhYmVscyA9IFt0aGlzLmdldERhdGUoMCwgMCwgMSwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDExLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMTAsIDAsICJNTS9ZWVlZIiksIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0ZSgwLCA5LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgOCwgIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCA3LCAgMCwgIk1NL1lZWVkiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwgNiwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDUsICAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgNCwgIDAsICJNTS9ZWVlZIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREYXRlKDAsIDMsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAyLCAgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDEsICAwLCAiTU0vWVlZWSIpLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwgMCwgMCwgIk1NL1lZWVkiKV07CgogICAgICAgICAgICBheGlvcwogICAgICAgICAgICAgICAgLmdldCgiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24/c3RhcnQ9IiArIHRoaXMuZ2V0RGF0ZSgwLCAwLCAxLCAiWVlZWS1NTS1ERCIpICsgIiZlbmQ9IiArIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiWVlZWS1NTS1ERCIpKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvcHlZZWFyRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YXNldCA9IGNvcHlZZWFyRGF0YXNldDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbGxMYWJlbHMucHVzaChtb21lbnQoa2V5KS5mb3JtYXQoIkREL01NIikpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgZ2V0TGFzdFRlblllYXJzRGF0YSgpewogICAgICAgICAgICB2YXIgY29weVRlblllYXJEYXRhc2V0ID0gW107CiAgICAgICAgICAgIHRoaXMuYWxsTGFiZWxzID0gW107CiAgICAgICAgICAgIHRoaXMuZ3JpZC52ZXJ0aWNhbExpbmVzTnVtYmVyID0gMTE7CiAgICAgICAgICAgIHRoaXMubGFiZWxzLnhMYWJlbHMgPSBbdGhpcy5nZXREYXRlKDAsIDAsIDEwLCAiTU0vWVlZWSIpLHRoaXMuZ2V0RGF0ZSgwLCAwLCA5LCAiTU0vWVlZWSIpLHRoaXMuZ2V0RGF0ZSgwLCAwLCA4LCAiTU0vWVlZWSIpLHRoaXMuZ2V0RGF0ZSgwLCAwLCA3LCAiTU0vWVlZWSIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0ZSgwLCAwLCAgNiwgIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwgMCwgNSwgIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwgMCwgNCwgIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwgMCwgMywgIk1NL1lZWVkiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwgMCwgIDIsICJNTS9ZWVlZIiksdGhpcy5nZXREYXRlKDAsIDAsIDEsICJNTS9ZWVlZIiksdGhpcy5nZXREYXRlKDAsIDAsIDAsICJNTS9ZWVlZIildOwogICAgICAgICAgICAKICAgICAgICAgICAgYXhpb3MKICAgICAgICAgICAgICAgIC5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMTAsICJZWVlZLU1NLUREIikgKyAiJmVuZD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJZWVlZLU1NLUREIikpCiAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YS5icGk7CiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29weVRlblllYXJEYXRhc2V0LnB1c2goZGF0YVtrZXldKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhc2V0ID0gY29weVRlblllYXJEYXRhc2V0OwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbExhYmVscy5wdXNoKG1vbWVudChrZXkpLmZvcm1hdCgiREQvTU0vWVlZWSIpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG9uTW91c2VNb3ZlKHBhcmFtcykgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRJbmZvID0gewogICAgICAgICAgICAgICAgbGFiZWw6IHBhcmFtcy5kYXRhWzBdLAogICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuYWxsTGFiZWxzW3BhcmFtcy5pbmRleF0KICAgICAgICAgICAgfTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmdldExhc3RUZW5ZZWFyc0RhdGEoKTsKICAgIH0KfQo="},{"version":3,"sources":["BitcoinHistory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"BitcoinHistory.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"history\">\r\n        <div id=\"historyGraphs\">\r\n            <trend-chart  v-if=\"dataset.length\" :datasets=\"[{data: dataset, fill: true, className: 'curve-btc'}]\" :labels=\"labels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\" @mouse-move=\"onMouseMove\"/>\r\n        </div>\r\n        <div class = \"historyButtons\">\r\n            <button @click=\"getLastWeeksData()\">1 week</button>\r\n            <button @click=\"getLastMonthsData()\">1 month</button>\r\n            <button @click=\"getLastYearsData()\">1 year</button>\r\n            <button @click=\"getLastTenYearsData()\">10 years</button>\r\n        </div>\r\n        <h1>{{currentInfo.value}} {{currentInfo.label}}</h1>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import axios from \"axios\";\r\n    import Vue from \"vue\";\r\n    import TrendChart from \"vue-trend-chart\";\r\n    Vue.use(TrendChart);\r\n    import moment from \"moment\";\r\n    export default{\r\n        el: \"#app\",\r\n        data ()  {\r\n            return {\r\n                isShown: 4,\r\n                dataset: [],\r\n                allLabels: [], \r\n                currentInfo: {\r\n                    value: \"000\",\r\n                    label: \"xxx\"\r\n                },\r\n                labels: {\r\n                    xLabels: [],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                grid: {\r\n                    verticalLines: true,\r\n                    verticalLinesNumber: 10,\r\n                    horizontalLines: true,\r\n                    horizontalLinesNumber: 5\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            getDate(days: number, months: number, years: number, format: string){\r\n                return moment()\r\n                    .subtract(days, \"days\")\r\n                    .subtract(months, \"months\")\r\n                    .subtract(years, \"years\")\r\n                    .format(format)\r\n            },\r\n            getLastWeeksData(){\r\n                var copyWeekDataset = [];\r\n                this.allLabels = [];\r\n                this.grid.verticalLinesNumber = 8;\r\n                this.labels.xLabels = [this.getDate(7, 0, 0, \"DD/MM\"), this.getDate(6, 0, 0, \"DD/MM\"), this.getDate(5, 0, 0, \"DD/MM\"),\r\n                                       this.getDate(4, 0, 0, \"DD/MM\"), this.getDate(3, 0, 0, \"DD/MM\"), this.getDate(2, 0, 0, \"DD/MM\"),\r\n                                       this.getDate(1, 0, 0, \"DD/MM\"), this.getDate(0, 0, 0, \"DD/MM\")];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(8, 0, 0, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyWeekDataset.push(data[key]);\r\n                            this.dataset = copyWeekDataset;\r\n                            this.allLabels.push(moment(key).format(\"DD/MM\"));\r\n                        }\r\n                    });\r\n            },\r\n            getLastMonthsData(){\r\n                var copyMonthDataset = [];\r\n                this.allLabels = [];\r\n                this.grid.verticalLinesNumber = 7;\r\n                this.labels.xLabels = [this.getDate(30, 0, 0, \"DD/MM\"), this.getDate(25, 0, 0, \"DD/MM\"), this.getDate(20, 0, 0, \"DD/MM\"),\r\n                                       this.getDate(15, 0, 0, \"DD/MM\"), this.getDate(10, 0, 0, \"DD/MM\"), this.getDate(5,  0, 0, \"DD/MM\"),\r\n                                       this.getDate(0,  0, 0, \"DD/MM\")];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyMonthDataset.push(data[key]);\r\n                            this.dataset = copyMonthDataset;\r\n                            this.allLabels.push(moment(key).format(\"DD/MM\"));\r\n                        }\r\n                    });\r\n            },\r\n            getLastYearsData(){\r\n                var copyYearDataset = [];\r\n                this.allLabels = [];\r\n                this.grid.verticalLinesNumber = 13;\r\n                this.labels.xLabels = [this.getDate(0, 0, 1, \"MM/YYYY\"), this.getDate(0, 11, 0, \"MM/YYYY\"), this.getDate(0, 10, 0, \"MM/YYYY\"), \r\n                                       this.getDate(0, 9, 0, \"MM/YYYY\"), this.getDate(0, 8,  0, \"MM/YYYY\"), this.getDate(0, 7,  0, \"MM/YYYY\"),\r\n                                       this.getDate(0, 6, 0, \"MM/YYYY\"), this.getDate(0, 5,  0, \"MM/YYYY\"), this.getDate(0, 4,  0, \"MM/YYYY\"),\r\n                                       this.getDate(0, 3, 0, \"MM/YYYY\"), this.getDate(0, 2,  0, \"MM/YYYY\"), this.getDate(0, 1,  0, \"MM/YYYY\"), \r\n                                       this.getDate(0, 0, 0, \"MM/YYYY\")];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 1, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyYearDataset.push(data[key]);\r\n                            this.dataset = copyYearDataset;\r\n                            this.allLabels.push(moment(key).format(\"DD/MM\"));\r\n                        }\r\n                    });\r\n            },\r\n            getLastTenYearsData(){\r\n                var copyTenYearDataset = [];\r\n                this.allLabels = [];\r\n                this.grid.verticalLinesNumber = 11;\r\n                this.labels.xLabels = [this.getDate(0, 0, 10, \"MM/YYYY\"),this.getDate(0, 0, 9, \"MM/YYYY\"),this.getDate(0, 0, 8, \"MM/YYYY\"),this.getDate(0, 0, 7, \"MM/YYYY\"),\r\n                                       this.getDate(0, 0,  6, \"MM/YYYY\"),this.getDate(0, 0, 5, \"MM/YYYY\"),this.getDate(0, 0, 4, \"MM/YYYY\"),this.getDate(0, 0, 3, \"MM/YYYY\"),\r\n                                       this.getDate(0, 0,  2, \"MM/YYYY\"),this.getDate(0, 0, 1, \"MM/YYYY\"),this.getDate(0, 0, 0, \"MM/YYYY\")];\r\n                \r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 10, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyTenYearDataset.push(data[key]);\r\n                            this.dataset = copyTenYearDataset;\r\n                            this.allLabels.push(moment(key).format(\"DD/MM/YYYY\"));\r\n                        }\r\n                    });\r\n            },\r\n            onMouseMove(params) {\r\n                this.currentInfo = {\r\n                    label: params.data[0],\r\n                    value: this.allLabels[params.index]\r\n                };\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getLastTenYearsData();\r\n        }\r\n    }\r\n</script>"]}]}