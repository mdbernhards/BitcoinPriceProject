{"remainingRequest":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue","mtime":1604056912501},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFRyZW5kQ2hhcnQgZnJvbSAidnVlLXRyZW5kLWNoYXJ0IjsKVnVlLnVzZShUcmVuZENoYXJ0KTsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwpleHBvcnQgZGVmYXVsdHsKICAgIGVsOiAiI2FwcCIsCiAgICBkYXRhICgpICB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaXNTaG93bjogNCwKICAgICAgICAgICAgd2Vla0RhdGFzZXQ6IFtdLAogICAgICAgICAgICBtb250aERhdGFzZXQ6IFtdLAogICAgICAgICAgICB5ZWFyRGF0YXNldDogW10sCiAgICAgICAgICAgIGFsbERhdGFzZXQ6IFtdLAogICAgICAgICAgICB3ZWVrTGFiZWxzOiB7CiAgICAgICAgICAgICAgICB4TGFiZWxzOiBbXSwKICAgICAgICAgICAgICAgIHlMYWJlbHM6IDUsCiAgICAgICAgICAgICAgICB5TGFiZWxzVGV4dEZvcm1hdHRlcjogdmFsID0+ICIkIiArIE1hdGgucm91bmQodmFsICogMTAwKSAvIDEwMAogICAgICAgICAgICB9LAogICAgICAgICAgICBtb250aExhYmVsczogewogICAgICAgICAgICAgICAgeExhYmVsczogW10sCiAgICAgICAgICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgICAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeWVhckxhYmVsczogewogICAgICAgICAgICAgICAgeExhYmVsczogWyIxMC8xOSIsICIxMS8xOSIsICIxMi8xOSIsICIwMS8yMCIsICIwMi8yMCIsICIwMy8yMCIsICIwNC8yMCIsICIwNS8yMCIsICIwNi8yMCIsICIwNy8yMCIsICIwOC8yMCIsICIwOS8yMCIsICIxMC8yMCJdLAogICAgICAgICAgICAgICAgeUxhYmVsczogNSwKICAgICAgICAgICAgICAgIHlMYWJlbHNUZXh0Rm9ybWF0dGVyOiB2YWwgPT4gIiQiICsgTWF0aC5yb3VuZCh2YWwgKiAxMDApIC8gMTAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFsbExhYmVsczogewogICAgICAgICAgICAgICAgeExhYmVsczogWzIwMTAsMjAxMSwyMDEyLDIwMTMsMjAxNCwyMDE1LDIwMTYsMjAxNywyMDE4LDIwMTksMjAyMF0sCiAgICAgICAgICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgICAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgICAgdmVydGljYWxMaW5lczogdHJ1ZSwKICAgICAgICAgICAgICAgIHZlcnRpY2FsTGluZXNOdW1iZXI6IDEwLAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbExpbmVzOiB0cnVlLAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbExpbmVzTnVtYmVyOiA1CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGNoYW5nZVNob3duKG51bWJlcil7CiAgICAgICAgICAgIHRoaXMuaXNTaG93biA9IG51bWJlcjsKICAgICAgICB9LAogICAgICAgIGdldERhdGUoZGF5cywgbW9udGhzLCB5ZWFycyl7CiAgICAgICAgICAgIHJldHVybiBtb21lbnQoKQogICAgICAgICAgICAgICAgICAgIC5zdWJ0cmFjdChkYXlzLCAiZGF5cyIpCiAgICAgICAgICAgICAgICAgICAgLnN1YnRyYWN0KG1vbnRocywgIm1vbnRocyIpCiAgICAgICAgICAgICAgICAgICAgLnN1YnRyYWN0KHllYXJzLCAieWVhcnMiKQogICAgICAgICAgICAgICAgICAgIC5mb3JtYXQoIllZWVktTU0tREQiKQogICAgICAgIH0sCgogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgYXhpb3MKICAgICAgICAgICAgLmdldCgiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24/c3RhcnQ9IiArIHRoaXMuZ2V0RGF0ZSg3LCAwLCAwKSArICImZW5kPSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMCkpCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLndlZWtEYXRhc2V0LnB1c2goZGF0YVtrZXldKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLndlZWtMYWJlbHMueExhYmVscy5wdXNoKG1vbWVudChrZXkpLmZvcm1hdCgiTU0vREQiKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICBheGlvcwogICAgICAgICAgICAuZ2V0KCJodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbiIpCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm1vbnRoRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb250aExhYmVscy54TGFiZWxzLnB1c2gobW9tZW50KGtleSkuZm9ybWF0KCJNTS9ERCIpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgIGF4aW9zCiAgICAgICAgICAgIC5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMSkgKyAiJmVuZD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDApKQogICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLmJwaTsKICAgICAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy55ZWFyRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICBheGlvcwogICAgICAgICAgICAuZ2V0KCJodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbj9zdGFydD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDEwKSArICImZW5kPSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMCkpCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbERhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgIH0KfQo="},{"version":3,"sources":["BitcoinHistory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BitcoinHistory.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"history\">\r\n        <trend-chart  v-if=\"weekDataset.length && isShown == 1\" :datasets=\"[{data: weekDataset, fill: true, className: 'curve-btc'}]\" :labels=\"weekLabels\" :min=\"11000.00\" :grid=\"grid\" :interactive=\"true\"/>\r\n        <trend-chart  v-if=\"monthDataset.length && isShown == 2\" :datasets=\"[{data: monthDataset, fill: true, className: 'curve-btc'}]\" :labels=\"monthLabels\" :min=\"7000.00\" :grid=\"grid\" :interactive=\"true\"/>\r\n        <trend-chart  v-if=\"yearDataset.length && isShown == 3\" :datasets=\"[{data: yearDataset, fill: true, className: 'curve-btc'}]\" :labels=\"yearLabels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"/>\r\n        <trend-chart  v-if=\"allDataset.length && isShown == 4\" :datasets=\"[{data: allDataset, fill: true, className: 'curve-btc'}]\" :labels=\"allLabels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"  @mouse-move=\"onMouseMove\"/>\r\n\r\n        <div class = \"historyButtons\">\r\n            <button v-on:click=\"changeShown(1)\">1 week</button>\r\n            <button v-on:click=\"changeShown(2)\">1 month</button>\r\n            <button v-on:click=\"changeShown(3)\">1 year</button>\r\n            <button v-on:click=\"changeShown(4)\">10 years</button>\r\n\r\n            {{getDate()}}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n    import Vue from \"vue\";\r\n    import TrendChart from \"vue-trend-chart\";\r\n    Vue.use(TrendChart);\r\n    import moment from \"moment\";\r\n    export default{\r\n        el: \"#app\",\r\n        data ()  {\r\n            return {\r\n                isShown: 4,\r\n                weekDataset: [],\r\n                monthDataset: [],\r\n                yearDataset: [],\r\n                allDataset: [],\r\n                weekLabels: {\r\n                    xLabels: [],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                monthLabels: {\r\n                    xLabels: [],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                yearLabels: {\r\n                    xLabels: [\"10/19\", \"11/19\", \"12/19\", \"01/20\", \"02/20\", \"03/20\", \"04/20\", \"05/20\", \"06/20\", \"07/20\", \"08/20\", \"09/20\", \"10/20\"],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                allLabels: {\r\n                    xLabels: [2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                grid: {\r\n                    verticalLines: true,\r\n                    verticalLinesNumber: 10,\r\n                    horizontalLines: true,\r\n                    horizontalLinesNumber: 5\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            changeShown(number){\r\n                this.isShown = number;\r\n            },\r\n            getDate(days, months, years){\r\n                return moment()\r\n                        .subtract(days, \"days\")\r\n                        .subtract(months, \"months\")\r\n                        .subtract(years, \"years\")\r\n                        .format(\"YYYY-MM-DD\")\r\n            },\r\n\r\n        },\r\n        mounted() {\r\n            axios\r\n                .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(7, 0, 0) + \"&end=\" + this.getDate(0, 0, 0))\r\n                .then(res => {\r\n                    const data = res.data.bpi;\r\n                    for (let key in data) {\r\n                        this.weekDataset.push(data[key]);\r\n                        this.weekLabels.xLabels.push(moment(key).format(\"MM/DD\"));\r\n                    }\r\n                });\r\n\r\n            axios\r\n                .get(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\r\n                .then(res => {\r\n                    const data = res.data.bpi;\r\n                    for (let key in data) {\r\n                        this.monthDataset.push(data[key]);\r\n                        this.monthLabels.xLabels.push(moment(key).format(\"MM/DD\"));\r\n                    }\r\n                });\r\n\r\n            axios\r\n                .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 1) + \"&end=\" + this.getDate(0, 0, 0))\r\n                .then(res => {\r\n                    const data = res.data.bpi;\r\n                    for (let key in data) {\r\n                        this.yearDataset.push(data[key]);\r\n                    }\r\n                });\r\n\r\n            axios\r\n                .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 10) + \"&end=\" + this.getDate(0, 0, 0))\r\n                .then(res => {\r\n                    const data = res.data.bpi;\r\n                    for (let key in data) {\r\n                        this.allDataset.push(data[key]);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n</script>"]}]}