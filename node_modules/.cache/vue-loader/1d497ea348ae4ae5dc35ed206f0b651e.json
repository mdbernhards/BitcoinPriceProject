{"remainingRequest":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\src\\components\\BitcoinHistory.vue","mtime":1604064848625},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Desktop\\BitcoinPriceProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFRyZW5kQ2hhcnQgZnJvbSAidnVlLXRyZW5kLWNoYXJ0IjsKVnVlLnVzZShUcmVuZENoYXJ0KTsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwpleHBvcnQgZGVmYXVsdHsKICAgIGVsOiAiI2FwcCIsCiAgICBkYXRhICgpICB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaXNTaG93bjogNCwKICAgICAgICAgICAgd2Vla0RhdGFzZXQ6IFtdLAogICAgICAgICAgICBtb250aERhdGFzZXQ6IFtdLAogICAgICAgICAgICB5ZWFyRGF0YXNldDogW10sCiAgICAgICAgICAgIHRlblllYXJEYXRhc2V0OiBbXSwKICAgICAgICAgICAgd2Vla0xhYmVsczogewogICAgICAgICAgICAgICAgeExhYmVsczogW3RoaXMuZ2V0RGF0ZSg3LCAwLCAwLCAiREQvTU0iKSwgdGhpcy5nZXREYXRlKDYsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoNSwgMCwgMCwgIkREL01NIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREYXRlKDQsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMywgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgyLCAwLCAwLCAiREQvTU0iKSwKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiREQvTU0iKV0sCiAgICAgICAgICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgICAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbW9udGhMYWJlbHM6IHsKICAgICAgICAgICAgICAgIHhMYWJlbHM6IFt0aGlzLmdldERhdGUoMzAsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMjUsIDAsIDAsICJERC9NTSIpLCB0aGlzLmdldERhdGUoMjAsIDAsIDAsICJERC9NTSIpLAogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0ZSgxNSwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSgxMCwgMCwgMCwgIkREL01NIiksIHRoaXMuZ2V0RGF0ZSg1LCAwLCAwLCAiREQvTU0iKSwKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwgMCwgMCwgIkREL01NIildLAogICAgICAgICAgICAgICAgeUxhYmVsczogNSwKICAgICAgICAgICAgICAgIHlMYWJlbHNUZXh0Rm9ybWF0dGVyOiB2YWwgPT4gIiQiICsgTWF0aC5yb3VuZCh2YWwgKiAxMDApIC8gMTAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHllYXJMYWJlbHM6IHsKICAgICAgICAgICAgICAgIHhMYWJlbHM6IFt0aGlzLmdldERhdGUoMCwgMCwgMSwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDExLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMTAsIDAsICJNTS9ZWVlZIiksIAogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGF0ZSgwLCA5LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgOCwgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDcsIDAsICJNTS9ZWVlZIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREYXRlKDAsIDYsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCA1LCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgNCwgMCwgIk1NL1lZWVkiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwgMywgMCwgIk1NL1lZWVkiKSwgdGhpcy5nZXREYXRlKDAsIDIsIDAsICJNTS9ZWVlZIiksIHRoaXMuZ2V0RGF0ZSgwLCAxLCAwLCAiTU0vWVlZWSIpLCB0aGlzLmdldERhdGUoMCwgMCwgMCwgIk1NL1lZWVkiKV0sCiAgICAgICAgICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgICAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGVuWWVhckxhYmVsczogewogICAgICAgICAgICAgICAgeExhYmVsczogW3RoaXMuZ2V0RGF0ZSgwLDAsMTAsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDksIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDgsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDcsIk1NL1lZWVkiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwwLDYsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDUsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDQsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDMsIk1NL1lZWVkiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERhdGUoMCwwLDIsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDEsIk1NL1lZWVkiKSx0aGlzLmdldERhdGUoMCwwLDAsIk1NL1lZWVkiKV0sCiAgICAgICAgICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgICAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiAiJCIgKyBNYXRoLnJvdW5kKHZhbCAqIDEwMCkgLyAxMDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgICAgdmVydGljYWxMaW5lczogdHJ1ZSwKICAgICAgICAgICAgICAgIHZlcnRpY2FsTGluZXNOdW1iZXI6IDEwLAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbExpbmVzOiB0cnVlLAogICAgICAgICAgICAgICAgaG9yaXpvbnRhbExpbmVzTnVtYmVyOiA1CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGNoYW5nZVNob3duKG51bWJlcil7CiAgICAgICAgICAgIHRoaXMuaXNTaG93biA9IG51bWJlcjsKICAgICAgICB9LAogICAgICAgIGdldERhdGUoZGF5cywgbW9udGhzLCB5ZWFycywgZm9ybWF0KXsKICAgICAgICAgICAgcmV0dXJuIG1vbWVudCgpCiAgICAgICAgICAgICAgICAgICAgLnN1YnRyYWN0KGRheXMsICJkYXlzIikKICAgICAgICAgICAgICAgICAgICAuc3VidHJhY3QobW9udGhzLCAibW9udGhzIikKICAgICAgICAgICAgICAgICAgICAuc3VidHJhY3QoeWVhcnMsICJ5ZWFycyIpCiAgICAgICAgICAgICAgICAgICAgLmZvcm1hdChmb3JtYXQpCiAgICAgICAgfSwKICAgICAgICBnZXRMYXN0V2Vla3NEYXRhKCl7CiAgICAgICAgICAgIHZhciBjb3B5V2Vla0RhdGFzZXQgPSBbXTsKCiAgICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgICAuZ2V0KCJodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbj9zdGFydD0iICsgdGhpcy5nZXREYXRlKDcsIDAsIDAsICJZWVlZLU1NLUREIikgKyAiJmVuZD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDAsICJZWVlZLU1NLUREIikpCiAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YS5icGk7CiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29weVdlZWtEYXRhc2V0LnB1c2goZGF0YVtrZXldKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy53ZWVrRGF0YXNldCA9IGNvcHlXZWVrRGF0YXNldDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGdldExhc3RNb250aHNEYXRhKCl7CiAgICAgICAgICAgIHZhciBjb3B5TW9udGhEYXRhc2V0ID0gW107CgogICAgICAgICAgICBheGlvcwogICAgICAgICAgICAgICAgLmdldCgiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24iKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvcHlNb250aERhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vbnRoRGF0YXNldCA9IGNvcHlNb250aERhdGFzZXQ7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBnZXRMYXN0WWVhcnNEYXRhKCl7CiAgICAgICAgICAgIHZhciBjb3B5WWVhckRhdGFzZXQgPSBbXTsKICAgICAgICAgICAgdGhpcy55ZWFyRGF0YXNldCA9IFtdOwoKICAgICAgICAgICAgYXhpb3MKICAgICAgICAgICAgICAgIC5nZXQoImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMSwgIllZWVktTU0tREQiKSArICImZW5kPSIgKyB0aGlzLmdldERhdGUoMCwgMCwgMCwgIllZWVktTU0tREQiKSkKICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLmJwaTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICBjb3B5WWVhckRhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnllYXJEYXRhc2V0ID0gY29weVllYXJEYXRhc2V0OwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgZ2V0TGFzdFRlblllYXJzRGF0YSgpewogICAgICAgICAgICB2YXIgY29weVRlblllYXJEYXRhc2V0ID0gW107CiAgICAgICAgICAgIHRoaXMudGVuWWVhckRhdGFzZXQgPSBbXTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgICAuZ2V0KCJodHRwczovL2FwaS5jb2luZGVzay5jb20vdjEvYnBpL2hpc3RvcmljYWwvY2xvc2UuanNvbj9zdGFydD0iICsgdGhpcy5nZXREYXRlKDAsIDAsIDEwLCAiWVlZWS1NTS1ERCIpICsgIiZlbmQ9IiArIHRoaXMuZ2V0RGF0ZSgwLCAwLCAwLCAiWVlZWS1NTS1ERCIpKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzLmRhdGEuYnBpOwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvcHlUZW5ZZWFyRGF0YXNldC5wdXNoKGRhdGFba2V5XSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGVuWWVhckRhdGFzZXQgPSBjb3B5VGVuWWVhckRhdGFzZXQ7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuZ2V0TGFzdFdlZWtzRGF0YSgpOwogICAgICAgIHRoaXMuZ2V0TGFzdE1vbnRoc0RhdGEoKTsKICAgICAgICB0aGlzLmdldExhc3RZZWFyc0RhdGEoKTsKICAgICAgICB0aGlzLmdldExhc3RUZW5ZZWFyc0RhdGEoKTsKICAgIH0KfQo="},{"version":3,"sources":["BitcoinHistory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"BitcoinHistory.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"history\">\r\n        <div id=\"historyGraphs\">\r\n            <trend-chart  v-if=\"weekDataset.length && isShown == 1\" :datasets=\"[{data: weekDataset, fill: true, className: 'curve-btc'}]\" :labels=\"weekLabels\" :min=\"11000.00\" :grid=\"grid\" :interactive=\"true\"/>\r\n            <trend-chart  v-if=\"monthDataset.length && isShown == 2\" :datasets=\"[{data: monthDataset, fill: true, className: 'curve-btc'}]\" :labels=\"monthLabels\" :min=\"7000.00\" :grid=\"grid\" :interactive=\"true\"/>\r\n            <trend-chart  v-if=\"yearDataset.length && isShown == 3\" :datasets=\"[{data: yearDataset, fill: true, className: 'curve-btc'}]\" :labels=\"yearLabels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"/>\r\n            <trend-chart  v-if=\"tenYearDataset.length && isShown == 4\" :datasets=\"[{data: tenYearDataset, fill: true, className: 'curve-btc'}]\" :labels=\"tenYearLabels\" :min=\"0\" :grid=\"grid\" :interactive=\"true\"/>\r\n        </div>\r\n        <div class = \"historyButtons\">\r\n            <button v-on:click=\"changeShown(1), getLastWeeksData()\">1 week</button>\r\n            <button v-on:click=\"changeShown(2), getLastMonthsData()\">1 month</button>\r\n            <button v-on:click=\"changeShown(3), getLastYearsData()\">1 year</button>\r\n            <button v-on:click=\"changeShown(4), getLastTenYearsData()\">10 years</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n    import Vue from \"vue\";\r\n    import TrendChart from \"vue-trend-chart\";\r\n    Vue.use(TrendChart);\r\n    import moment from \"moment\";\r\n    export default{\r\n        el: \"#app\",\r\n        data ()  {\r\n            return {\r\n                isShown: 4,\r\n                weekDataset: [],\r\n                monthDataset: [],\r\n                yearDataset: [],\r\n                tenYearDataset: [],\r\n                weekLabels: {\r\n                    xLabels: [this.getDate(7, 0, 0, \"DD/MM\"), this.getDate(6, 0, 0, \"DD/MM\"), this.getDate(5, 0, 0, \"DD/MM\"),\r\n                              this.getDate(4, 0, 0, \"DD/MM\"), this.getDate(3, 0, 0, \"DD/MM\"), this.getDate(2, 0, 0, \"DD/MM\"),\r\n                              this.getDate(1, 0, 0, \"DD/MM\"), this.getDate(0, 0, 0, \"DD/MM\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                monthLabels: {\r\n                    xLabels: [this.getDate(30, 0, 0, \"DD/MM\"), this.getDate(25, 0, 0, \"DD/MM\"), this.getDate(20, 0, 0, \"DD/MM\"),\r\n                              this.getDate(15, 0, 0, \"DD/MM\"), this.getDate(10, 0, 0, \"DD/MM\"), this.getDate(5, 0, 0, \"DD/MM\"),\r\n                              this.getDate(0, 0, 0, \"DD/MM\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                yearLabels: {\r\n                    xLabels: [this.getDate(0, 0, 1, \"MM/YYYY\"), this.getDate(0, 11, 0, \"MM/YYYY\"), this.getDate(0, 10, 0, \"MM/YYYY\"), \r\n                              this.getDate(0, 9, 0, \"MM/YYYY\"), this.getDate(0, 8, 0, \"MM/YYYY\"), this.getDate(0, 7, 0, \"MM/YYYY\"),\r\n                              this.getDate(0, 6, 0, \"MM/YYYY\"), this.getDate(0, 5, 0, \"MM/YYYY\"), this.getDate(0, 4, 0, \"MM/YYYY\"),\r\n                              this.getDate(0, 3, 0, \"MM/YYYY\"), this.getDate(0, 2, 0, \"MM/YYYY\"), this.getDate(0, 1, 0, \"MM/YYYY\"), this.getDate(0, 0, 0, \"MM/YYYY\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                tenYearLabels: {\r\n                    xLabels: [this.getDate(0,0,10,\"MM/YYYY\"),this.getDate(0,0,9,\"MM/YYYY\"),this.getDate(0,0,8,\"MM/YYYY\"),this.getDate(0,0,7,\"MM/YYYY\"),\r\n                              this.getDate(0,0,6,\"MM/YYYY\"),this.getDate(0,0,5,\"MM/YYYY\"),this.getDate(0,0,4,\"MM/YYYY\"),this.getDate(0,0,3,\"MM/YYYY\"),\r\n                              this.getDate(0,0,2,\"MM/YYYY\"),this.getDate(0,0,1,\"MM/YYYY\"),this.getDate(0,0,0,\"MM/YYYY\")],\r\n                    yLabels: 5,\r\n                    yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n                },\r\n                grid: {\r\n                    verticalLines: true,\r\n                    verticalLinesNumber: 10,\r\n                    horizontalLines: true,\r\n                    horizontalLinesNumber: 5\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            changeShown(number){\r\n                this.isShown = number;\r\n            },\r\n            getDate(days, months, years, format){\r\n                return moment()\r\n                        .subtract(days, \"days\")\r\n                        .subtract(months, \"months\")\r\n                        .subtract(years, \"years\")\r\n                        .format(format)\r\n            },\r\n            getLastWeeksData(){\r\n                var copyWeekDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(7, 0, 0, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyWeekDataset.push(data[key]);\r\n                            this.weekDataset = copyWeekDataset;\r\n                        }\r\n                    });\r\n            },\r\n            getLastMonthsData(){\r\n                var copyMonthDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyMonthDataset.push(data[key]);\r\n                            this.monthDataset = copyMonthDataset;\r\n                        }\r\n                    });\r\n            },\r\n            getLastYearsData(){\r\n                var copyYearDataset = [];\r\n                this.yearDataset = [];\r\n\r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 1, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyYearDataset.push(data[key]);\r\n                            this.yearDataset = copyYearDataset;\r\n                        }\r\n                    });\r\n            },\r\n            getLastTenYearsData(){\r\n                var copyTenYearDataset = [];\r\n                this.tenYearDataset = [];\r\n                \r\n                axios\r\n                    .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + this.getDate(0, 0, 10, \"YYYY-MM-DD\") + \"&end=\" + this.getDate(0, 0, 0, \"YYYY-MM-DD\"))\r\n                    .then(res => {\r\n                        const data = res.data.bpi;\r\n                        for (let key in data) {\r\n                            copyTenYearDataset.push(data[key]);\r\n                            this.tenYearDataset = copyTenYearDataset;\r\n                        }\r\n                    });\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n            this.getLastWeeksData();\r\n            this.getLastMonthsData();\r\n            this.getLastYearsData();\r\n            this.getLastTenYearsData();\r\n        }\r\n    }\r\n</script>"]}]}