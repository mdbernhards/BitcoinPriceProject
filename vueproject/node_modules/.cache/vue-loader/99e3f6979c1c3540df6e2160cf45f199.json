{"remainingRequest":"C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\src\\components\\BitcoinHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\src\\components\\BitcoinHistory.vue","mtime":1603884453886},{"path":"C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\martins.d.bernhards\\Documents\\newVue\\vueproject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFRyZW5kQ2hhcnQgZnJvbSAidnVlLXRyZW5kLWNoYXJ0IjsKVnVlLnVzZShUcmVuZENoYXJ0KTsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwpleHBvcnQgZGVmYXVsdHsKZWw6ICIjYXBwIiwKZGF0YSAoKSAgewogICAgcmV0dXJuIHsKICAgICAgICBkYXRhc2V0OiBbXSwKICAgICAgICBsYWJlbHM6IHsKICAgICAgICB4TGFiZWxzOiBbXSwKICAgICAgICB5TGFiZWxzOiA1LAogICAgICAgIHlMYWJlbHNUZXh0Rm9ybWF0dGVyOiB2YWwgPT4gIiQiICsgTWF0aC5yb3VuZCh2YWwgKiAxMDApIC8gMTAwCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgdmVydGljYWxMaW5lczogdHJ1ZSwKICAgICAgICB2ZXJ0aWNhbExpbmVzTnVtYmVyOiAxLAogICAgICAgIGhvcml6b250YWxMaW5lczogdHJ1ZSwKICAgICAgICBob3Jpem9udGFsTGluZXNOdW1iZXI6IDEKICAgICAgICB9CiAgICB9Cn0sCm1vdW50ZWQoKSB7CiAgICBheGlvcwogICAgLmdldCgKICAgICAgICAiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9oaXN0b3JpY2FsL2Nsb3NlLmpzb24iCiAgICApCiAgICAudGhlbihyZXMgPT4gewogICAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YS5icGk7CiAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHsKICAgICAgICB0aGlzLmRhdGFzZXQucHVzaChkYXRhW2tleV0pOwogICAgICAgIHRoaXMubGFiZWxzLnhMYWJlbHMucHVzaChtb21lbnQoa2V5KS5mb3JtYXQoIk1NL0REIikpOwogICAgICAgIH0KICAgIH0pOwp9Cn0K"},{"version":3,"sources":["BitcoinHistory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BitcoinHistory.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"app\">\r\n        <div class=\"bitcoin-price\">\r\n            <svg style=\"width:0; height:0; position:absolute;\" aria-hidden=\"true\" focusable=\"false\">\r\n            <defs>\r\n                <linearGradient id=\"btcFill\" x1=\"1\" x2=\"1\" y1=\"0\" y2=\"1\">\r\n                <stop offset=\"0%\" stop-color=\"#f69119\"></stop>\r\n                <stop offset=\"100%\" stop-color=\"#ffffff\"></stop>\r\n                </linearGradient>\r\n            </defs>\r\n            </svg>\r\n            <trend-chart v-if=\"dataset.length\" :datasets=\"[{data: dataset, fill: true, className: 'curve-btc'}]\" :labels=\"labels\" :min=\"0\" :grid=\"grid\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n    import Vue from \"vue\";\r\n    import TrendChart from \"vue-trend-chart\";\r\n    Vue.use(TrendChart);\r\n    import moment from \"moment\";\r\n    export default{\r\n    el: \"#app\",\r\n    data ()  {\r\n        return {\r\n            dataset: [],\r\n            labels: {\r\n            xLabels: [],\r\n            yLabels: 5,\r\n            yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\r\n            },\r\n            grid: {\r\n            verticalLines: true,\r\n            verticalLinesNumber: 1,\r\n            horizontalLines: true,\r\n            horizontalLinesNumber: 1\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        axios\r\n        .get(\r\n            \"https://api.coindesk.com/v1/bpi/historical/close.json\"\r\n        )\r\n        .then(res => {\r\n            const data = res.data.bpi;\r\n            for (let key in data) {\r\n            this.dataset.push(data[key]);\r\n            this.labels.xLabels.push(moment(key).format(\"MM/DD\"));\r\n            }\r\n        });\r\n    }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    #app {\r\n    margin: 0 auto;\r\n    padding: 30px;\r\n    max-width: 1200px;\r\n    max-height: 300px;\r\n    }\r\n\r\n    .vtc {\r\n        height: 250px;\r\n        font-size: 12px;\r\n        @media (min-width: 699px) {\r\n        height: 350px;\r\n        }\r\n    }\r\n    .grid,\r\n    .labels {\r\n        stroke: rgba(#f69119, 0.5);\r\n    }\r\n    \r\n        line {\r\n            opacity: 0.3;\r\n        }\r\n    .curve-btc {\r\n        stroke: #f69119;\r\n        stroke-width: 2;\r\n\r\n        fill: url(#btcFill);\r\n        fill-opacity: 0.5;\r\n    }\r\n</style>"]}]}